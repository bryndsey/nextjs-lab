"use client";
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Patty: THREE.Mesh;
    Lettuce: THREE.Mesh;
    BunTop_1: THREE.Mesh;
    BunTop_2: THREE.Mesh;
    BunBottom_1: THREE.Mesh;
    BunBottom_2: THREE.Mesh;
    Tomato: THREE.Mesh;
  };
  materials: {
    Patty: THREE.MeshStandardMaterial;
    Lettuce: THREE.MeshStandardMaterial;
    Bun: THREE.MeshStandardMaterial;
    BunInside: THREE.MeshStandardMaterial;
    Tomato: THREE.MeshStandardMaterial;
  };
};

export function Hamburger(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/assets/models/hamburger.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Patty.geometry} material={materials.Patty} />
      <mesh geometry={nodes.Lettuce.geometry} material={materials.Lettuce} />
      <mesh geometry={nodes.Tomato.geometry} material={materials.Tomato} />
      <mesh geometry={nodes.BunTop_1.geometry} material={materials.Bun} />
      <mesh geometry={nodes.BunTop_2.geometry} material={materials.BunInside} />
      <mesh geometry={nodes.BunBottom_1.geometry} material={materials.Bun} />
      <mesh
        geometry={nodes.BunBottom_2.geometry}
        material={materials.BunInside}
      />
    </group>
  );
}

useGLTF.preload("/assets/models/hamburger.glb");
